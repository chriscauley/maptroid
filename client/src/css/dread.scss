:root {
  --dread-void: #021118;
}

.panel-screenshot {
  @apply relative;
  &__buttons {
    @apply absolute bottom-0 flex gap-2 justify-between p-2 w-full;
    background: rgba(0,0,0,0.75);
  }
}

.dread-screenshot {
  @apply absolute cursor-pointer border border-white hidden;
  .dread-zone.-tool-ss_trash &,
  .dread-zone.-tool-ss_group &,
  .dread-zone.-tool-ss_move & {
    display: block;
  }
  img {
    @apply hidden w-full;
  }
  &:hover {
    border-width: 4px;
    border-style: dashed;
  }
  &.-dragging {
    background-size: 100% 100%;
    border: 0;
    filter: invert(1);
    opacity: 0.5;
    img {
      display: block;
    }
  }
}

.dread-zone.-hide-grid,
.dread-zone.-mode-undefined {
  .room-canvas__wrapper {
    outline: 0;
    background: none !important;
  }
}


.dread-zone {
  @apply relative;
  &.-mode-screenshots .dread-icon {
    display: none;
  }
  &.-tool-room_item .dread-icon:hover {
    opacity: 0;
    transition: 0.5s;
  }
}

.__debug {
  @apply absolute bottom-0 flex left-0;
  .w-48 {
    width: 12rem;
  }
}

.dread-viewer {
  background: white;
  .dread-zone.-mode-undefined & {
    background: var(--dread-void);
  }
}

.dread-world-viewer {
  background: var(--dread-void);
}

@mixin checkered($c1, $c2, $s:16.5px) {
  background: repeating-conic-gradient($c1 0% 25%, $c2 0% 50%) 50% / #{$s} #{$s};
}

.-tool_door, .-tool_wall {
  @apply h-4 w-4;
  background: white;
}

.-tool_wall.-variant_, .dread-square.-type_wall_ {
  &solid {
    background: black;
  }
  &room {
    background: gray;
  }
  &mixed {
    @include checkered(black, gray);
  }
  &ignore {
    @include checkered(red, gray);
  }
}

.dread-square {}

.-tool_door.-variant_, .dread-square.-type_door_ {
  $bomb: hotpink;
  $gate1: #dbe503;
  $gate2: #374760;
  $wave: #a15fb5;
  $grapple1: #3f9fcc;
  $grapple2: #486177;
  $screw-attack: #1b91ec;
  &bomb {
    @include checkered($bomb, $gate2);
  }
  &gate {
    @include checkered($gate1, $gate2);
  }
  &wave-beam {
    @include checkered($wave, $grapple2);
  }
  &grapple-beam {
    @include checkered($grapple1, $grapple2);
  }
  &trash {
    background: transparent;
    color: red;
    &:before {
      @apply absolute;
      content: "X";
      font-family: monospace;
      font-size: 20px;
      font-style: normal;
      line-height: 1;
    }
  }
  &screw-attack {
    background: $screw-attack;
  }
}

.ur-toolbar .btn {
  @apply relative;
}

.screenshot-analyzer__debug {
  @apply border bottom-0 fixed left-0 p-2;
  background: var(--bg-alt);
}

.ur-toolbar .fa-object-group {
  font-weight: normal;
  &:after {
    @apply absolute block bottom-0 h-3 m-1 right-0 rounded-full w-3;
    content: '';
  }
  &.-group-0:after {
    @apply border border-white;
  }
}

.dread-group {
  @apply flex gap-4 mb-4;
  &__circle {
    @apply h-4 rounded-full w-4;
  }
}

@mixin color-group($number, $color) {
  .ur-toolbar .fa-object-group.-group-#{$number}:after, .dread-group__circle.-group-#{$number} {
    background: $color
  }
  .dread-screenshot.-group-#{$number} {
    border-color: $color;
  }
}

@include color-group(0, white);
@include color-group(1, #F00);
@include color-group(2, #0F0);
@include color-group(3, #00F);
@include color-group(4, #0FF);
@include color-group(5, #F0F);
@include color-group(6, #FF0);
@include color-group(7, #888);
@include color-group(8, #964B00);

.room-canvas {
  image-rendering: pixelated;
  height: 100%;
  width: 100%;
  &__wrapper {
    @apply absolute;
    outline: 2px solid pink;
    z-index: 2;
    &:hover {
      outline: 4px solid pink;
    }
    &.-selected-item {
      border: 4px double gold;
    }
  }
  &__resize {
    @apply absolute bottom-0 right-0;
  }
  &__edit {
    @apply absolute bottom-0 left-0;
  }
  &__move {
    @apply absolute top-0 left-0;
  }
  &__grid {
    @apply absolute inset-0;
    pointer-events: none;
    image-rendering: pixelated;
  }
  &__delete {
    @apply absolute right-0 top-0;
  }
  &__to-zone {
    @apply absolute inset-0;
    &:hover {
      border: 4px solid white;
    }
  }
}

.dread-debug {
  @apply fixed bottom-0 left-0 p-2;
  background: rgba(0,0,0,0.5);
}

.zone-box {
  @apply absolute opacity-0;
  transform: translate(-50%, -50%);
  &:hover {
    opacity: 1;
  }
  .unrest-draggable {
    @apply absolute bg-white cursor-pointer h-4 rounded-full w-4;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
  }
  img {
    width: 100%;
  }
  &.-dragging {
    filter: invert(1) contrast(2);
    opacity: 0.25;
  }
  a {
    @apply absolute inset-0;
  }
}

.dread-icon {
  @apply block relative;
  width: 1em;
  height: 1em;
  &:before {
    @apply absolute block inset-0;
    content: "";
    background-size: cover;
    background-repeat: no-repeat;
    filter: brightness(1.25) contrast(1.25);
  }
  &.-type-block__void:before {
    background: repeating-conic-gradient(red 0% 25%, black 0% 50%) 50% / 25px 25px !important;
  }
}

.ur-toolbar {
  .dread-icon, .room-color {
    font-size: 24px;
    margin: -4px;
  }
}

.ur-toolbar .room-color {
  width: 1em;
  height: 1em;
  background: var(--dread-color);
}

.room-canvas__wrapper .dread-icon:before {
  cursor: pointer;
  inset: -10%;
  outline: white solid 2px;
  transition: inset 0.25s;
  .dread-zone.-zoom-0 & {
    /* todo this makes everything square so I'll need to adapt it based off of image size */
    inset: -0.75rem;
  }
}

.room-canvas__wrapper .dread-icon .transit-link {
  /* This makes transit links slightly larger than the icon */
  @apply absolute;
  inset: -11%;
  .dread-zone.-zoom-0 & {
    inset: -0.8rem;
  }
}

.item-list {
  background: var(--bg);
  .list-group-item {
    cursor: pointer;
    .dread-icon, .sm-item {
      font-size: 2em;
    }
  }
  &__header {
    @apply cursor-pointer flex items-center px-4 py-2 sticky top-0;
    background: var(--bg-alt);
    border-bottom: var(--bg) 1px solid;
    z-index: 1;
  }
  &__player {
    max-width: 100%;
    overflow-x: hidden;
  }
}

.item-list .item-list__filter {
  @apply cursor-default gap-4 justify-start;
  .ur-form {
    @apply flex-grow;
  }
  .form-group {
    @apply m-0;
  }
  select {
    @apply cursor-pointer
  }
}

.dread-sprites {
  &__item {
    @apply mb-4;
  }
  &__title {
    @apply font-bold flex gap-2 items-center;
    font-size: 2.5rem;
  }
  &__section {
    @apply mb-4;
    &__title {
      font-size: 3rem;
    }
  }
  &__images {
    @apply flex gap-4;
    img {
      max-width: unset
    }
    &.-size-loaded img {
      width: 255px;
      image-rendering: pixelated;
    }
    .source {
      filter: brightness(1.5);
    }
  }
  &__swatch {
    @apply cursor-pointer flex items-center justify-center;
    background: repeating-conic-gradient(white 0% 25%, black 0% 50%) 50% / 20px 20px;
    height: 1em;
    width: 1em;
    .fa-warning {
      font-size: 0.75em;
      text-shadow: 0 0 1px black;
    }
  }
  &__overlay-images {
    @apply relative;
    svg {
      height: unset !important;
      min-width: 500px;
    }
    ._fg {
      @apply absolute left-0 opacity-0 top-0;
      filter: invert(1);
      z-index: 2;
      &:hover {
        opacity: 0.5;
      }
    }
    ._bg {
      @apply relative;
      z-index: 1
    }
  }
  &__swatches {
    @apply flex flex-wrap gap-4;
    font-size: 3rem;
    .-selected {
      border: 2px dotted black;
      box-shadow: 0 0 2px white;
    }
  }
}

.video-box {
  @apply absolute bottom-0 left-0;
  background: var(--bg);
  &__avatar {
    @apply h-8 ml-4 rounded-full w-8;
    background: no-repeat center;
    background-size: contain;
  }
  &__player {
    width: 700px;
  }
  &__title {
    @apply cursor-pointer flex gap-2 items-center;
  }
  &__seperator {
    @apply flex-grow;
    min-width: 4rem;
  }
  .item-list__header {
    cursor: default;
  }
  &__missing {
    @apply flex justify-between;
  }
}

.video-picker {
  max-width: 650px;
  &__video {
    @apply border cursor-pointer rounded-lg;
    width: 300px;
  }
  &__label {
    @apply text-lg p-2;
  }
  &__title {
    @apply p-2 pb-0 truncate;
  }
  &__by {
    @apply flex items-center gap-2 p-2;
  }
  &__thumbnail {
    background: no-repeat center;
    background-size: cover;
    padding-top: 56%;
    width: 100%;
  }
}

.item-bar {
  @apply flex gap-6;
  &__item {
    @apply flex gap-2 items-center;
  }
}

