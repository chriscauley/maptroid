@use "sass:math";
@use "sass:color";
@use "sass:list";
@import "./variables.scss";

.edit-room .modal-content {
  min-width: 650px;
  padding-top: 3rem; /* for toolbar */
  position: relative;
  .modal-body {
    height: 100%;
    overflow: auto;
    width: 100%;
  }
  .ur-toolbar__row:last-child {
    display:none;
  }
  .ur-toolbar:hover .ur-toolbar__row:last-child {
    display: flex;
  }
}

.sm-room-box {
  background-size: cover;
  &.-mode-overlap, &.-mode-item, &.-mode-block, &.-mode-plm {
    position: relative;
  }
  canvas {
    display:none;
    width: 100%;
    height: 100%;
  }
  .-tool-edit_room &:hover {
    outline: 2px solid white;
  }
  &__drag-bounds {
    @apply absolute border-2 border-green-500;
    pointer-events: none;
  }
  .sm-cre-hex {
    pointer-events: none;
  }
  &__override {
    @apply absolute cursor-pointer;
    outline: 2px solid white;
  }
  &.-highlight {
    outline: 4px solid red;
  }
}

.osd-html__overlay .sm-item {
  @apply absolute;
  &:before {
    @apply absolute bg-black;
    outline: 1px solid white;
    transition: inset 0.25s;
  }
  @mixin item-zoom($zoom, $ratio) {
    .-zoom-#{$zoom} & {
      .ur-popper {
        padding-top: $ratio * 100%;
      }
      &:before {
        inset: $ratio * -100%;
      }
    }
  }
  @include item-zoom(-4, 16);
  @include item-zoom(-3, 12);
  @include item-zoom(-2, 8);
  @include item-zoom(-1, 6);
  @include item-zoom(0, 4);
  @include item-zoom(1, 2);
  @include item-zoom(2, 1);
}

.sm-zone-box {
  &__move {
    outline: 1px solid gray;
  }
}

.sm-zone-box, .sm-room-box {
  @apply absolute;
  .unrest-draggable {
    @apply absolute cursor-pointer inset-0;
    background-size: 100% auto;
  }
}

.-tool-move_zone {
  .sm-room-box {
    display: none;
  }
}

.sm-elevator, .sm-item, .sm-block, .sm-cre-hex, .sm-portal {
  @apply relative inline-block;
  height: 1em;
  width: 1em;
  &:before {
    @apply absolute inset-0;
    background-size: 100% auto;
    content: "";
    image-rendering: pixelated;
  }
  &.-has-not {
    opacity: 0.75;
    filter: grayscale(1);
  }
}

.sm-elevator {
  @each $z in brinstar, tourian, maridia, norfair, {
    &.-#{$z}:before {
      background-image: url("/static/sm/elevator__#{$z}.png");
    }
  }
  .btn &:before {
    inset: -50%;
  }
}

.sm-elevator.-line:before {
  background: linear-gradient(to left, transparent 25%, #ccc 25%, #ccc 75%, transparent 75%);
}

$cre-hex: respawn block exit;

.sm-cre-hex {
  &:before {
    background-image: url("/static/sm/cre-hex.png");
  }
  @for $i from 0 to length($cre-hex) {
    $name: nth($cre-hex, $i + 1);
    &.-#{"" + $name}:before {
      background-position: 0 $i * -100%;
    }
  }
}

$block: shot crumble bomb missile super-missile power-bomb speed-booster grapple_break grapple grapple_mirror spike_up spike_down spike_right spike_left conveyor_down conveyor_up conveyor_right conveyor_left enemy enemy-break;

.sm-block {
  @for $i from 0 to length($block) {
    $name: nth($block, $i + 1);
    &.-#{"" + $name}:before {
      background-image: url("/static/sm/block.png");
      background-position: 0 $i * -100%;
    }
  }
}

@each $template-name, $sprites in $template_sprites {
  $y_offset: 0;
  @each $tuple in $sprites {
    $name: list.nth($tuple, 1);
    $width: list.nth($tuple, 2);
    $height: list.nth($tuple, 3);
    .sm-block.-#{$name} {
      background-size: cover;
      background-image: url("/static/sm/icons/templates/#{$name}.png");
      width: math.div($width, $height) * 1em;
      &:before {
        /* This is a css hack to force the aspect ratio */
        content: "";
        display: block;
        padding-top: math.div($height, $width) * 100%;
      }
    }
  }
}

$block: empty block spike_misc spark exit switch_shot;

.sm-block {
  @for $i from 0 to length($block) {
    $name: nth($block, $i + 1);
    &.-#{"" + $name}:before {
      background-image: url("/static/sm/block-alt.png");
      background-position: 0 $i * -100%;
    }
  }
}

$items: morph-ball bomb screw-attack missile super-missile energy-tank energy2-tank varia-suit space-jump power-bomb hi-jump-boots speed-booster pedastool reserve-tank x-ray spring-ball grappling-beam charge-beam spazer-beam wave-beam ice-beam plasma-beam gravity-suit;

.sm-item {
  &:before {
    background-image: url("/static/sm/items.png");
  }
  @for $i from 0 to length($items) {
    $name: nth($items, $i + 1);
    &.-#{"" + $name}:before {
      background-position: 0 $i * -100%;
    }
    &.-alt:before {
      background-image: url("/static/sm/items-alt.png");
    }
  }
  &.-confused:before {
    background-image: url("/static/sm/confused.png");
    background-position: unset;
  }
}

$ascent-items: weapons-tank shinespark boost-ball;
.sm-item {
  @for $i from 0 to length($ascent-items) {
    $name: nth($ascent-items, $i + 1);
    &.-#{"" + $name}:before {
      background-image: url("/static/sm/ascent-items.png");
      background-position: 0 $i * -100%;
    }
  }
}

.sm-portal {
  &:before {
    image-rendering: unset;
  }
  @each $name, $_color in $portal-colors {
    &.-#{$name}:before {
      background-image: url("/static/sm/portal/#{$name}.png")
    }
  }
}

.osd-html__overlay .sm-portal {
  @apply absolute;
}


$pink: #d83890;
$green: #017e13;
$yellow: #d1b102;
$blue: #283888;
$red: #d42020;
$maroon: #5c152b;
$magenta: #991b8c;
$gray: #585c65;
$dark-green: #044f60;


$zone-colors: (
  "crateria": $pink,
  "brinstar": $green,
  "wrecked-ship": $yellow,
  "maridia": $blue,
  "norfair": $red,
  "tourian": $magenta,

  /* ypx */
  "bringtea": $green,
  "daridia": $blue,
  "gorfair": $red,
  "orateria": $pink,
  "steamed-tofu": $yellow,
  "tourist": $magenta,

  /* y-faster */
  "orangestar": $pink,
  "goldstar": $green,
  "darkstar": $yellow,
  "zaristar": $blue,
  "northstar": $red,
  "finalstar": $magenta,

  /* Super Zero Mission */
  "ridley": $red,
  "chozodia": $yellow,
  "kraid": $dark-green,
  "pirate-ship": $blue,

  /* Ascent */
  "zone-1": $pink,
  "zone-2": $yellow,
  "zone-3a": $blue,
  "zone-3b": $red,
  "void": $magenta,

  /* Vitality */
  "pendulu-moda": $green,
  "tag-lacora": $blue,
  "tchornobog": $dark-green,
  "akhlys": $red,
  "andavald": $magenta,
  "elseq": $maroon,

  /* Cliffhanger */
  "eldridge": $gray,
  "surripere": $blue,
  "melkabah": $magenta,
  "juolbrin": $green,
  "melfad": $magenta,
  "keruarn": $maroon,
);

.sm-room-svg {
  @apply overflow-visible relative;
  /* pointer-events: none; */
  rect, path {
    vector-effect: non-scaling-stroke;
  }
  path {
    fill: transparent;
    stroke: transparent;
    &.-inner {
      display: none;
      pointer-events: none;
    }
    &.-outer {
      stroke-width: 3px;
      transition: 0.25s;
      &:hover {
        stroke-width: 6px;
        stroke: #ccc;
        fill: transparent;
      }
      &.-highlight, &.-highlight:hover {
        fill: theme('colors.red.800');
        stroke: theme('colors.red.400');
      }
    }
  }
  line.run {
    stroke: theme('colors.green.500');
    stroke-width: 0.0625;
    pointer-events: none;
    marker-end: url(#arrowhead);
    &.-highlight {
      stroke: theme('colors.red.800');
      stroke-width: 0.25;
      marker-end: url(#red-arrowhead);
    }
  }
}

.sm-elevator-svg {
  @apply absolute left-0 overflow-visible top-0;
  line.elevator {
    stroke: #ccc;
    stroke-linecap: round;
    stroke-width: 0.25;
    pointer-events: none;
  }
}

.-tool-move_room,
.-tool-edit_room,
.-tool-rezone {
  .sm-room-svg {
    display:none;
  }
}

.-layer-rooms .sm-room-svg path.-outer {
  stroke: #0f0;
  @each $name, $color in $zone-colors {
    &.-zone-#{$name} {
      stroke: $color;
      &:hover {
        stroke: #ccc;
      }
    }
  }
}

.app-body.-zoom--3, .app-body.-zoom--4 {
  .sm-room-svg path.-outer {
    @each $name, $color in $zone-colors {
      &.-zone-#{$name} {
        $color_a: color.change($color,$alpha: 0.85);
        fill: color.adjust($color_a, $blackness: 25%);
      }
    }
  }
}

/* everything below here is from the old editor and will eventually be removed */
.sm-room, .sm-map, .sm-chozo, .sm-door {
  background-size: 100% auto;
  display: inline-block;
  height: 1em;
  image-rendering: pixelated;
  width: 1em;
}

.sm-chozo {
  background-image: url("/static/sm/chozo.png");
}

.sm-map {
  $icons: save map energy missile boss elevator;
  background-image: url("/static/sm/map_icons.png");
  background-size: auto 100%;
  @for $i from 0 to length($icons) {
    $name: nth($icons, $i + 1);
    &.-#{"" + $name} {
      background-position: $i * -100% 0;
    }
  }
  &.-ship {
    background-position: right 0;
    width: 2em;
  }
}

.sm-door {
  $colors: green blue orange red purple brown;
  @for $i from 0 to length($colors) {
    $name: nth($colors, $i + 1);
    &.-#{"" + $name} {
      background: $name;
    }
  }
  &.-eye {
    background: gray;
  }
  &.-elevator {
    background: #d8c800;
    border-radius: 100%;
    transform: scaleY(0.3);
  }
}


@mixin room($name, $color) {
  &.-#{"" + $name} {
    background: $color;
    fill: $color;
    .map-editor.-has-selected-room &:not(.-selected) {
      opacity: 0.5;
      background: linear-gradient(45deg, transparent 25%, $color 25%, $color 50%, transparent 50%, transparent 75%, $color 75%, $color 100%);
    }
  }
}

.sm-room {
  border: #a0f8f8 0.125em solid;
  stroke: #a0f8f8;
  stroke-width: 0.0001;
  @each $name, $color in $zone-colors {
    @include room($name, $color);
  }
  &.-void {
    border: 0;
  }
  &.-elevator {
    background: url("/static/sm/elevator.png");
    border: 0;
    background-size: 100% auto;
    opacity: 0.5;
    &.-selected {
      opacity: 1;
    }
  }
  &.-absolute {
    position: absolute;
  }
  &.-selected, &.-draft {
    border-style: dashed;
    border-width: 0.5em;
  }
  &.-draft {
    border-color: #ff8;
  }
  &.br0 {
    border-right: 0;
  }
  &.bl0 {
    border-left: 0;
  }
  &.bt0 {
    border-top: 0;
  }
  &.bb0 {
    border-bottom: 0;
  }
  &.-style-mini {
    background: transparent;
  }
}

.sm-config-popper {
  @apply border p-2;
  background: var(--bg);
  label {
    @apply block;
  }
}

.run-list {
  @apply flex flex-col overflow-hidden;
  &__scroll {
    overflow-y: auto;
  }
}