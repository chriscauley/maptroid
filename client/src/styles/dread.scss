.panel-screenshot {
  @apply relative;
  &__buttons {
    @apply absolute bottom-0 flex gap-2 justify-between p-2 w-full;
    background: rgba(0,0,0,0.75);
  }
}

.dread-anchor {
  @apply absolute cursor-pointer border border-white;
  img {
    @apply hidden w-full;
  }
  &:hover {
    border-width: 4px;
    border-style: dashed;
  }
  &.-dragging {
    background-size: 100% 100%;
    border: 0;
    filter: invert(1);
    opacity: 0.5;
    img {
      display: block;
    }
  }
}

.__debug {
  @apply absolute bottom-0 flex left-0;
  .w-48 {
    width: 12rem;
  }
}

.dread-viewer {
  background: white;
}

.dread-world-viewer {
  background: #0c0b10;
}

@mixin checkered($c1, $c2, $s:16.5px) {
  background: repeating-conic-gradient($c1 0% 25%, $c2 0% 50%) 50% / #{$s} #{$s};
}

.-tool_door, .-tool_wall {
  @apply h-4 w-4;
  background: white;
}

.-tool_wall.-variant_, .dread-square.-type_wall_ {
  &solid {
    background: black;
  }
  &room {
    background: gray;
  }
  &mixed {
    @include checkered(black, gray);
  }
  &ignore {
    @include checkered(red, gray);
  }
}

.dread-square {}

.-tool_door.-variant_, .dread-square.-type_door_ {
  $bomb: hotpink;
  $gate1: #dbe503;
  $gate2: #374760;
  $wave: #a15fb5;
  $grapple1: #3f9fcc;
  $grapple2: #486177;
  $screw-attack: #1b91ec;
  &bomb {
    @include checkered($bomb, $gate2);
  }
  &gate {
    @include checkered($gate1, $gate2);
  }
  &wave-beam {
    @include checkered($wave, $grapple2);
  }
  &grapple-beam {
    @include checkered($grapple1, $grapple2);
  }
  &trash {
    background: transparent;
    color: red;
    &:before {
      @apply absolute;
      content: "X";
      font-family: monospace;
      font-size: 20px;
      font-style: normal;
      line-height: 1;
    }
  }
  &screw-attack {
    background: $screw-attack;
  }
}

.ur-toolbar .btn {
  @apply relative;
}

.screenshot-analyzer__debug {
  @apply border bottom-0 fixed left-0 p-2;
  background: var(--bg-alt);
}

.ur-toolbar .fa-object-group {
  font-weight: normal;
  &:after {
    @apply absolute block bottom-0 h-3 m-1 right-0 rounded-full w-3;
    content: '';
  }
  &.-group-0:after {
    @apply border border-white;
  }
}

.dread-group {
  @apply flex gap-4 mb-4;
  &__circle {
    @apply h-4 rounded-full w-4;
  }
}

@mixin color-group($number, $color) {
  .ur-toolbar .fa-object-group.-group-#{$number}:after, .dread-group__circle.-group-#{$number} {
    background: $color
  }
  .dread-anchor.-group-#{$number} {
    border-color: $color;
  }
}

@include color-group(0, white);
@include color-group(1, #F00);
@include color-group(2, #0F0);
@include color-group(3, #00F);
@include color-group(4, #0FF);
@include color-group(5, #F0F);
@include color-group(6, #FF0);
@include color-group(7, #888);
@include color-group(8, #964B00);

.room-canvas {
  image-rendering: pixelated;
  height: 100%;
  width: 100%;
  &__wrapper {
    @apply absolute;
    outline: 4px double pink;
    z-index: 2;
    &:hover {
      outline: 8px double pink;
    }
  }
  &__resize {
    @apply absolute;
    top: 100%;
    left: 100%;
  }
}

.dread-debug {
  @apply fixed bottom-0 left-0 p-2;
  background: rgba(0,0,0,0.5);
}

.zone-box {
  @apply absolute opacity-0;
  transform: translate(-50%, -50%);
  &:hover {
    opacity: 1;
  }
  .unrest-draggable {
    @apply absolute bg-white cursor-pointer h-4 rounded-full w-4;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
  }
  img {
    width: 100%;
  }
  &.-dragging {
    filter: invert(1) contrast(2);
    opacity: 0.25;
  }
}